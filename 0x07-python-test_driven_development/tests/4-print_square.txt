# 4-print_square.txt
===============================
How to Use 4-print_square.py
===============================

This library is very simple, since it only has one function called
``print_square()``.

Numbers
=======

``print_square()`` prints a square with the character #.

::

   >>> print_square = __import__('4-print_square').print_square
   >>> print_square(2)
   ##
   ##
   >>> print_square(6)
   ######
   ######
   ######
   ######
   ######
   ######
   >>> print_square(0)

   >>> print_square(1)
   #

With floating-point values.

::

   >>> print_square(2.0)
   Traceback (most recent call last):
   TypeError: size must be an integer
   >>> print_square(-9.4)
   Traceback (most recent call last):
   TypeError: size must be an integer

Non-Numbers
===========

Raise error message in cases that the variable are negative integer and not
a  integer

::

   >>> print_square('a')
   Traceback (most recent call last):
   TypeError: size must be an integer

   >>> print_square("Holberton")
   Traceback (most recent call last):
   TypeError: size must be an integer

   >>> print_square(-1)
   Traceback (most recent call last):
   ValueError: size must be >= 0

   >>> print_square('G')
   Traceback (most recent call last):
   TypeError: size must be an integer

   >>> print_square(None)
   Traceback (most recent call last):
   TypeError: size must be an integer

   >>> print_square()
   Traceback (most recent call last):
   TypeError: print_square() missing 1 required positional argument: 'size'
